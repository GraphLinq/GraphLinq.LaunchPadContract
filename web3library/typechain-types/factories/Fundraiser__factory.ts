/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Fundraiser, FundraiserInterface } from "../Fundraiser";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "owner_",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "campaign",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract ICampaign",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "claimFunds",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "claimTokens",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "claimed",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "contribute",
    inputs: [
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "contributions",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "finalize",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "finalizedTimestamp",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRequiredAmountsForLiquidity",
    inputs: [
      {
        name: "raiseTokenAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "requiredSaleTokens",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "info",
    inputs: [],
    outputs: [
      {
        name: "projectName",
        type: "string",
        internalType: "string",
      },
      {
        name: "description",
        type: "string",
        internalType: "string",
      },
      {
        name: "websiteLink",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initSwapPair",
    inputs: [
      {
        name: "tickLower",
        type: "int24",
        internalType: "int24",
      },
      {
        name: "tickUpper",
        type: "int24",
        internalType: "int24",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct Fundraiser.FundraiserParams",
        components: [
          {
            name: "saleToken",
            type: "address",
            internalType: "address",
          },
          {
            name: "raiseToken",
            type: "address",
            internalType: "address",
          },
          {
            name: "projectName",
            type: "string",
            internalType: "string",
          },
          {
            name: "description",
            type: "string",
            internalType: "string",
          },
          {
            name: "websiteLink",
            type: "string",
            internalType: "string",
          },
          {
            name: "campaign",
            type: "address",
            internalType: "contract ICampaign",
          },
          {
            name: "vestingStartDelta",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "vestingDuration",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "positionManager",
            type: "address",
            internalType: "address",
          },
          {
            name: "vesting",
            type: "address",
            internalType: "contract IVesting",
          },
          {
            name: "poolFee",
            type: "uint24",
            internalType: "uint24",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "poolFee",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint24",
        internalType: "uint24",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "positionManager",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract INonfungiblePositionManager",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "purchasedTokens",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "raiseToken",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IERC20",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "raisedAmount",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "saleToken",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IERC20",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setFailed",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "soldAmount",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "state",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "enum Fundraiser.FundraiserState",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "vesting",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IVesting",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "vestingDuration",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "vestingStartDelta",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "Claimed",
    inputs: [
      {
        name: "claimer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Contribution",
    inputs: [
      {
        name: "contributor",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Failed",
    inputs: [],
    anonymous: false,
  },
  {
    type: "event",
    name: "Finalized",
    inputs: [],
    anonymous: false,
  },
  {
    type: "event",
    name: "FundsClaimed",
    inputs: [
      {
        name: "claimer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint64",
        indexed: false,
        internalType: "uint64",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiquidityMintingFailed",
    inputs: [],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SwapPairInitialized",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "liquidity",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AddressEmptyCode",
    inputs: [
      {
        name: "target",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "FailedCall",
    inputs: [],
  },
  {
    type: "error",
    name: "InsufficientBalance",
    inputs: [
      {
        name: "balance",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "needed",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidInitialization",
    inputs: [],
  },
  {
    type: "error",
    name: "NotInitializing",
    inputs: [],
  },
  {
    type: "error",
    name: "OwnableInvalidOwner",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "OwnableUnauthorizedAccount",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ReentrancyGuardReentrantCall",
    inputs: [],
  },
  {
    type: "error",
    name: "SafeERC20FailedOperation",
    inputs: [
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
    ],
  },
] as const;

const _bytecode =
  "0x608060405234801562000010575f80fd5b50604051620027b8380380620027b88339810160408190526200003391620000c8565b806001600160a01b0381166200006257604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b6200006d8162000079565b505060018055620000f7565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f60208284031215620000d9575f80fd5b81516001600160a01b0381168114620000f0575f80fd5b9392505050565b6126b380620001055f395ff3fe608060405234801561000f575f80fd5b50600436106101a1575f3560e01c80638da5cb5b116100f3578063c80b7c1711610093578063e77d1a1f1161006e578063e77d1a1f1461039b578063e985e367146103a4578063f2fde38b146103b7578063fa1a5f59146103ca575f80fd5b8063c80b7c171461032e578063c884ef8314610341578063df7dbd7914610373575f80fd5b8063ac307773116100ce578063ac307773146102f0578063c19d93fb146102f8578063c1cbbca714610312578063c59ee1dc14610325575f80fd5b80638da5cb5b146102c45780639972cffe146102d45780639b13e8e9146102e7575f80fd5b806348c54b9d1161015e5780634da60aa5116101395780634da60aa514610283578063715018a614610296578063791b98bc1461029e578063811e539c146102b1575f80fd5b806348c54b9d146102545780634bae6f3f1461025c5780634bb278f31461027b575f80fd5b8063089fe6aa146101a5578063146901db146101d25780631514617e146101dc578063370158ea146101f357806342e94c901461020a57806344c63eec14610229575b5f80fd5b6012546101b990610100900462ffffff1681565b60405162ffffff90911681526020015b60405180910390f35b6101da6103d3565b005b6101e560065481565b6040519081526020016101c9565b6101fb61057d565b6040516101c99392919061202d565b6101e5610218366004612089565b600f6020525f908152604090205481565b600d5461023c906001600160a01b031681565b6040516001600160a01b0390911681526020016101c9565b6101da610725565b6101e561026a366004612089565b60106020525f908152604090205481565b6101da6108fc565b600b5461023c906001600160a01b031681565b6101da610b04565b600e5461023c906001600160a01b031681565b600c5461023c906001600160a01b031681565b5f546001600160a01b031661023c565b6101da6102e23660046120b5565b610b15565b6101e560095481565b6101da610f60565b6012546103059060ff1681565b6040516101c991906120fa565b6101da610320366004612120565b611082565b6101e560075481565b6101da61033c366004612210565b611233565b61036361034f366004612089565b60116020525f908152604090205460ff1681565b60405190151581526020016101c9565b610386610381366004612120565b6117eb565b604080519283526020830191909152016101c9565b6101e560055481565b600a5461023c906001600160a01b031681565b6101da6103c5366004612089565b6118e9565b6101e560085481565b6103db611923565b6103e361194f565b5f60125460ff1660038111156103fb576103fb6120e6565b146104465760405162461bcd60e51b815260206004820152601660248201527546756e6472616973696e67206e6f742061637469766560501b60448201526064015b60405180910390fd5b600c5f9054906101000a90046001600160a01b03166001600160a01b031663a8d31c786040518163ffffffff1660e01b81526004015f604051808303815f87803b158015610492575f80fd5b505af11580156104a4573d5f803e3d5ffd5b50506012805460ff191660021790555050600a546040516370a0823160e01b81523060048201525f916001600160a01b0316906370a0823190602401602060405180830381865afa1580156104fb573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061051f9190612344565b6040519091507f625a40e68d9554793bf647bf32e4885e7f15bd1bfac262906cc7d26f376f20a2905f90a161057161055e5f546001600160a01b031690565b600a546001600160a01b03169083611979565b5061057b60018055565b565b60028054819061058c9061235b565b80601f01602080910402602001604051908101604052809291908181526020018280546105b89061235b565b80156106035780601f106105da57610100808354040283529160200191610603565b820191905f5260205f20905b8154815290600101906020018083116105e657829003601f168201915b5050505050908060010180546106189061235b565b80601f01602080910402602001604051908101604052809291908181526020018280546106449061235b565b801561068f5780601f106106665761010080835404028352916020019161068f565b820191905f5260205f20905b81548152906001019060200180831161067257829003601f168201915b5050505050908060020180546106a49061235b565b80601f01602080910402602001604051908101604052809291908181526020018280546106d09061235b565b801561071b5780601f106106f25761010080835404028352916020019161071b565b820191905f5260205f20905b8154815290600101906020018083116106fe57829003601f168201915b5050505050905083565b61072d61194f565b600360125460ff166003811115610746576107466120e6565b1461078b5760405162461bcd60e51b815260206004820152601560248201527414ddd85c081c185a5c881b9bdd0818dc99585d1959605a1b604482015260640161043d565b335f9081526011602052604090205460ff16156107e35760405162461bcd60e51b8152602060048201526016602482015275151bdad95b9cc8185b1c9958591e4818db185a5b595960521b604482015260640161043d565b335f908152601160209081526040808320805460ff191660011790556010909152902054600654156108a657600d546005546009546001600160a01b03909216916324ef8c1b91339161083691906123a7565b6006546040516001600160e01b031960e086901b1681526001600160a01b03909316600484015260248301919091526044820152606481018490526084015f604051808303815f87803b15801561088b575f80fd5b505af115801561089d573d5f803e3d5ffd5b505050506108bd565b600a546108bd906001600160a01b03163383611979565b60405181815233907fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a9060200160405180910390a25061057b60018055565b610904611923565b61090c61194f565b5f60125460ff166003811115610924576109246120e6565b1461096a5760405162461bcd60e51b815260206004820152601660248201527546756e6472616973696e67206e6f742061637469766560501b604482015260640161043d565b6012805460ff19166001179055600c546040805163d54dff2d60e01b815290516001600160a01b039092169163d54dff2d916004808201925f9290919082900301818387803b1580156109bb575f80fd5b505af11580156109cd573d5f803e3d5ffd5b505050506109fb6109e55f546001600160a01b031690565b600754600b546001600160a01b03169190611979565b600a546040516370a0823160e01b81523060048201525f916001600160a01b0316906370a0823190602401602060405180830381865afa158015610a41573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a659190612344565b9050600854811115610aa557610aa5610a855f546001600160a01b031690565b600854610a9290846123ba565b600a546001600160a01b03169190611979565b60065415610ace57600d54600854600a54610ace926001600160a01b0391821692911690611979565b426009556040517f6823b073d48d6e3a7d385eeb601452d680e74bb46afe3255a7d778f3a9b17681905f90a15061057b60018055565b610b0c611923565b61057b5f6119dd565b610b1d611923565b610b2561194f565b600160125460ff166003811115610b3e57610b3e6120e6565b14610b8b5760405162461bcd60e51b815260206004820152601960248201527f46756e6472616973696e67206e6f742066696e616c697a656400000000000000604482015260640161043d565b6012805460ff19166003179055600a546040516370a0823160e01b81523060048201525f916001600160a01b0316906370a0823190602401602060405180830381865afa158015610bde573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c029190612344565b600b546040516370a0823160e01b81523060048201529192505f916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610c4d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c719190612344565b60065490915082905f03610cf7576008548311610ce75760405162461bcd60e51b815260206004820152602e60248201527f4e6f7420656e6f7567682073616c6520746f6b656e7320746f2063726561746560448201526d103a34329039bbb0b8103830b4b960911b606482015260840161043d565b600854610cf490846123ba565b90505b5f80610d02846117eb565b9150915082821115610d6b5760405162461bcd60e51b815260206004820152602c60248201527f4e6f7420656e6f756768206c697175696469747920746f20637265617465207460448201526b34329039bbb0b8103830b4b960a11b606482015260840161043d565b600a54600b545f91829182918291610d91916001600160a01b0390811691168888611a2c565b600e5493975091955093509150610db5906001600160a01b03808716911684611ad2565b600e54610dcf906001600160a01b03858116911683611ad2565b60408051610160810182526001600160a01b038087168252858116602083015260125462ffffff61010091829004168385015260028f810b60608501528e900b608084015260a0830186905260c083018590525f60e084018190529083018190523361012084015242610140840152600e549351634418b22b60e11b815292939092839283928392911690638831645690610e6e9088906004016123cd565b6080604051808303815f875af1158015610e8a573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610eae9190612491565b935093509350935086821015610edd57610edd33610ecc848a6123ba565b6001600160a01b038c169190611979565b85811015610f0457610f0433610ef383896123ba565b6001600160a01b038b169190611979565b604080518581526001600160801b03851660208201527fc1a1ee9d31c39113d1073fa8118a8a09cd2e5777ef352c4bede40d05f9376236910160405180910390a15050505050505050505050505050610f5c60018055565b5050565b600260125460ff166003811115610f7957610f796120e6565b14610fb95760405162461bcd60e51b815260206004820152601060248201526f14985a5cd9481b9bdd0819985a5b195960821b604482015260640161043d565b335f9081526011602052604090205460ff16156110105760405162461bcd60e51b8152602060048201526015602482015274119d5b991cc8185b1c9958591e4818db185a5b5959605a1b604482015260640161043d565b335f818152601160209081526040808320805460ff19166001179055600f8252918290205491518281529192917fa65a8b4f7f65a1063243d7f7e9e4da00ff767599acf21549ef2548a45d1695ae910160405180910390a2600b5461107f906001600160a01b03163383611979565b50565b61108a61194f565b5f60125460ff1660038111156110a2576110a26120e6565b146110ef5760405162461bcd60e51b815260206004820152601960248201527f46756e6472616973696e67206973206e6f742061637469766500000000000000604482015260640161043d565b600c5460405163060b0b0f60e41b8152600481018390523360248201525f916001600160a01b0316906360b0b0f0906044016020604051808303815f875af115801561113d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111619190612344565b335f908152600f60205260408120805492935084929091906111849084906123a7565b9091555050335f90815260106020526040812080548392906111a79084906123a7565b925050819055508160075f8282546111bf91906123a7565b925050819055508060085f8282546111d791906123a7565b9091555050600b546111f4906001600160a01b0316333085611b5f565b60405182815233907f4d154d4aae216bed6d0926db77c00df2b57c6b5ba4eee05775de20facede3a7b9060200160405180910390a25061107f60018055565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff165f811580156112785750825b90505f8267ffffffffffffffff1660011480156112945750303b155b9050811580156112a2575080155b156112c05760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156112ea57845460ff60401b1916600160401b1785555b85516001600160a01b031661134b5760405162461bcd60e51b815260206004820152602160248201527f53616c6520746f6b656e20616464726573732063616e6e6f74206265207a65726044820152606f60f81b606482015260840161043d565b60208601516001600160a01b03166113b05760405162461bcd60e51b815260206004820152602260248201527f526169736520746f6b656e20616464726573732063616e6e6f74206265207a65604482015261726f60f01b606482015260840161043d565b6101008601516001600160a01b031661141b5760405162461bcd60e51b815260206004820152602760248201527f506f736974696f6e206d616e6167657220616464726573732063616e6e6f74206044820152666265207a65726f60c81b606482015260840161043d565b60a08601516001600160a01b03166114755760405162461bcd60e51b815260206004820152601f60248201527f43616d706169676e20616464726573732063616e6e6f74206265207a65726f00604482015260640161043d565b60e0860151158061149357506101208601516001600160a01b031615155b6114fc5760405162461bcd60e51b815260206004820152603460248201527f56657374696e6720616464726573732063616e6e6f74206265207a65726f206960448201527319881d995cdd1a5b99c81a5cc8195b98589b195960621b606482015260840161043d565b85610140015162ffffff166127101480611521575085610140015162ffffff16610bb8145b80611537575085610140015162ffffff166101f4145b6115765760405162461bcd60e51b815260206004820152601060248201526f496e76616c696420706f6f6c2066656560801b604482015260640161043d565b8551600a80546001600160a01b03199081166001600160a01b0393841617909155602080890151600b805490931693169290921790556040805160608082018352828a0151808352908a0151938201939093526080890151918101919091529060029081906115e59082612522565b50602082015160018201906115fa9082612522565b506040820151600282019061160f9082612522565b50505060a0860151600c80546001600160a01b03199081166001600160a01b039384161790915561010080890151600e8054841691851691909117905560e089015160065560c0890151600555610120890151600d805490931693169290921790556012805461014089015163ffffffff1990911662ffffff9091169092029190911790555f6116a7683635c9adc5dea000006117eb565b50600a54600b549192505f918291829182916116da916001600160a01b03918216911687683635c9adc5dea00000611a2c565b600e5460125494985092965090945092506001600160a01b0316906313ead5629086908690610100900462ffffff166117138787611b98565b6040516001600160e01b031960e087901b1681526001600160a01b039485166004820152928416602484015262ffffff90911660448301529190911660648201526084016020604051808303815f875af1158015611773573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061179791906125de565b50505050505083156117e357845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b5f805f600c5f9054906101000a90046001600160a01b03166001600160a01b0316637b1b1de66040518163ffffffff1660e01b8152600401602060405180830381865afa15801561183e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906118629190612344565b90505f81116118c55760405162461bcd60e51b815260206004820152602960248201527f50726963652070657220746f6b656e206d7573742062652067726561746572206044820152687468616e207a65726f60b81b606482015260840161043d565b806118d885670de0b6b3a76400006125f9565b6118e29190612624565b9492505050565b6118f1611923565b6001600160a01b03811661191a57604051631e4fbdf760e01b81525f600482015260240161043d565b61107f816119dd565b5f546001600160a01b0316331461057b5760405163118cdaa760e01b815233600482015260240161043d565b60026001540361197257604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b6040516001600160a01b038381166024830152604482018390526119d891859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050611bc3565b505050565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f805f80866001600160a01b0316886001600160a01b031603611a915760405162461bcd60e51b815260206004820152601860248201527f546f6b656e73206d75737420626520646966666572656e740000000000000000604482015260640161043d565b866001600160a01b0316886001600160a01b03161015611abb575086925085915084905083611ac7565b50859250869150839050845b945094509450949050565b604051636eb1769f60e11b81523060048201526001600160a01b0383811660248301525f919085169063dd62ed3e90604401602060405180830381865afa158015611b1f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611b439190612344565b9050611b598484611b5485856123a7565b611c24565b50505050565b6040516001600160a01b038481166024830152838116604483015260648201839052611b599186918216906323b872dd906084016119a6565b5f80611ba884606085901b612624565b90505f6030611bb683611cb3565b901b925050505b92915050565b5f611bd76001600160a01b03841683611e06565b905080515f14158015611bfb575080806020019051810190611bf99190612643565b155b156119d857604051635274afe760e01b81526001600160a01b038416600482015260240161043d565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b179052611c758482611e1a565b611b59576040516001600160a01b0384811660248301525f6044830152611ca991869182169063095ea7b3906064016119a6565b611b598482611bc3565b5f60018211611cc0575090565b816001600160801b8210611cd95760809190911c9060401b5b600160401b8210611cef5760409190911c9060201b5b6401000000008210611d065760209190911c9060101b5b620100008210611d1b5760109190911c9060081b5b6101008210611d2f5760089190911c9060041b5b60108210611d425760049190911c9060021b5b60048210611d4e5760011b5b600302600190811c90818581611d6657611d66612610565b048201901c90506001818581611d7e57611d7e612610565b048201901c90506001818581611d9657611d96612610565b048201901c90506001818581611dae57611dae612610565b048201901c90506001818581611dc657611dc6612610565b048201901c90506001818581611dde57611dde612610565b048201901c9050611dfd818581611df757611df7612610565b04821190565b90039392505050565b6060611e1383835f611ebb565b9392505050565b5f805f846001600160a01b031684604051611e359190612662565b5f604051808303815f865af19150503d805f8114611e6e576040519150601f19603f3d011682016040523d82523d5f602084013e611e73565b606091505b5091509150818015611e9d575080511580611e9d575080806020019051810190611e9d9190612643565b8015611eb257505f856001600160a01b03163b115b95945050505050565b606081471015611ee75760405163cf47918160e01b81524760048201526024810183905260440161043d565b5f80856001600160a01b03168486604051611f029190612662565b5f6040518083038185875af1925050503d805f8114611f3c576040519150601f19603f3d011682016040523d82523d5f602084013e611f41565b606091505b5091509150611f51868383611f5b565b9695505050505050565b606082611f7057611f6b82611fb7565b611e13565b8151158015611f8757506001600160a01b0384163b155b15611fb057604051639996b31560e01b81526001600160a01b038516600482015260240161043d565b5080611e13565b805115611fc75780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b5f5b83811015611ffa578181015183820152602001611fe2565b50505f910152565b5f8151808452612019816020860160208601611fe0565b601f01601f19169290920160200192915050565b606081525f61203f6060830186612002565b82810360208401526120518186612002565b90508281036040840152611f518185612002565b6001600160a01b038116811461107f575f80fd5b803561208481612065565b919050565b5f60208284031215612099575f80fd5b8135611e1381612065565b8035600281900b8114612084575f80fd5b5f80604083850312156120c6575f80fd5b6120cf836120a4565b91506120dd602084016120a4565b90509250929050565b634e487b7160e01b5f52602160045260245ffd5b602081016004831061211a57634e487b7160e01b5f52602160045260245ffd5b91905290565b5f60208284031215612130575f80fd5b5035919050565b634e487b7160e01b5f52604160045260245ffd5b604051610160810167ffffffffffffffff8111828210171561216f5761216f612137565b60405290565b5f82601f830112612184575f80fd5b813567ffffffffffffffff8082111561219f5761219f612137565b604051601f8301601f19908116603f011681019082821181831017156121c7576121c7612137565b816040528381528660208588010111156121df575f80fd5b836020870160208301375f602085830101528094505050505092915050565b803562ffffff81168114612084575f80fd5b5f60208284031215612220575f80fd5b813567ffffffffffffffff80821115612237575f80fd5b90830190610160828603121561224b575f80fd5b61225361214b565b61225c83612079565b815261226a60208401612079565b6020820152604083013582811115612280575f80fd5b61228c87828601612175565b6040830152506060830135828111156122a3575f80fd5b6122af87828601612175565b6060830152506080830135828111156122c6575f80fd5b6122d287828601612175565b6080830152506122e460a08401612079565b60a082015260c083013560c082015260e083013560e0820152610100915061230d828401612079565b828201526101209150612321828401612079565b8282015261014091506123358284016121fe565b91810191909152949350505050565b5f60208284031215612354575f80fd5b5051919050565b600181811c9082168061236f57607f821691505b60208210810361238d57634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b80820180821115611bbd57611bbd612393565b81810381811115611bbd57611bbd612393565b81516001600160a01b03168152610160810160208301516123f960208401826001600160a01b03169052565b506040830151612410604084018262ffffff169052565b506060830151612425606084018260020b9052565b50608083015161243a608084018260020b9052565b5060a083015160a083015260c083015160c083015260e083015160e083015261010080840151818401525061012080840151612480828501826001600160a01b03169052565b505061014092830151919092015290565b5f805f80608085870312156124a4575f80fd5b8451935060208501516001600160801b03811681146124c1575f80fd5b6040860151606090960151949790965092505050565b601f8211156119d857805f5260205f20601f840160051c810160208510156124fc5750805b601f840160051c820191505b8181101561251b575f8155600101612508565b5050505050565b815167ffffffffffffffff81111561253c5761253c612137565b6125508161254a845461235b565b846124d7565b602080601f831160018114612583575f841561256c5750858301515b5f19600386901b1c1916600185901b1785556117e3565b5f85815260208120601f198616915b828110156125b157888601518255948401946001909101908401612592565b50858210156125ce57878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b5f602082840312156125ee575f80fd5b8151611e1381612065565b8082028115828204841417611bbd57611bbd612393565b634e487b7160e01b5f52601260045260245ffd5b5f8261263e57634e487b7160e01b5f52601260045260245ffd5b500490565b5f60208284031215612653575f80fd5b81518015158114611e13575f80fd5b5f8251612673818460208701611fe0565b919091019291505056fea2646970667358221220744ca69132fa31502a17b884defccc7e7b448aec7d580e45a2986497bf3b374864736f6c63430008180033";

type FundraiserConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FundraiserConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Fundraiser__factory extends ContractFactory {
  constructor(...args: FundraiserConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    owner_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(owner_, overrides || {});
  }
  override deploy(
    owner_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(owner_, overrides || {}) as Promise<
      Fundraiser & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Fundraiser__factory {
    return super.connect(runner) as Fundraiser__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FundraiserInterface {
    return new Interface(_abi) as FundraiserInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Fundraiser {
    return new Contract(address, _abi, runner) as unknown as Fundraiser;
  }
}
