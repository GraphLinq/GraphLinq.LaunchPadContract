/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Fundraiser, FundraiserInterface } from "../Fundraiser";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "owner_",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "campaign",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract ICampaign",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "claimFunds",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "claimTokens",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "claimed",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "contribute",
    inputs: [
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "contributions",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "createdTimestamp",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "finalize",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "finalizedTimestamp",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRequiredAmountsForLiquidity",
    inputs: [
      {
        name: "raiseTokenAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "requiredSaleTokens",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "info",
    inputs: [],
    outputs: [
      {
        name: "projectName",
        type: "string",
        internalType: "string",
      },
      {
        name: "description",
        type: "string",
        internalType: "string",
      },
      {
        name: "websiteLink",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initSwapPair",
    inputs: [
      {
        name: "tickLower",
        type: "int24",
        internalType: "int24",
      },
      {
        name: "tickUpper",
        type: "int24",
        internalType: "int24",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct Fundraiser.FundraiserParams",
        components: [
          {
            name: "saleToken",
            type: "address",
            internalType: "address",
          },
          {
            name: "raiseToken",
            type: "address",
            internalType: "address",
          },
          {
            name: "projectName",
            type: "string",
            internalType: "string",
          },
          {
            name: "description",
            type: "string",
            internalType: "string",
          },
          {
            name: "websiteLink",
            type: "string",
            internalType: "string",
          },
          {
            name: "campaign",
            type: "address",
            internalType: "contract ICampaign",
          },
          {
            name: "vestingStartDelta",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "vestingDuration",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "positionManager",
            type: "address",
            internalType: "address",
          },
          {
            name: "vesting",
            type: "address",
            internalType: "contract IVesting",
          },
          {
            name: "poolFee",
            type: "uint24",
            internalType: "uint24",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "poolFee",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint24",
        internalType: "uint24",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "positionManager",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract INonfungiblePositionManager",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "purchasedTokens",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "raiseToken",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IERC20",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "raisedAmount",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "saleToken",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IERC20",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setFailed",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "soldAmount",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "state",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "enum Fundraiser.FundraiserState",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "vesting",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IVesting",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "vestingDuration",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "vestingStartDelta",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "Claimed",
    inputs: [
      {
        name: "claimer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Contribution",
    inputs: [
      {
        name: "contributor",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Failed",
    inputs: [],
    anonymous: false,
  },
  {
    type: "event",
    name: "Finalized",
    inputs: [],
    anonymous: false,
  },
  {
    type: "event",
    name: "FundsClaimed",
    inputs: [
      {
        name: "claimer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint64",
        indexed: false,
        internalType: "uint64",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LiquidityMintingFailed",
    inputs: [],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SwapPairInitialized",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "liquidity",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AddressEmptyCode",
    inputs: [
      {
        name: "target",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "FailedCall",
    inputs: [],
  },
  {
    type: "error",
    name: "InsufficientBalance",
    inputs: [
      {
        name: "balance",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "needed",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidInitialization",
    inputs: [],
  },
  {
    type: "error",
    name: "NotInitializing",
    inputs: [],
  },
  {
    type: "error",
    name: "OwnableInvalidOwner",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "OwnableUnauthorizedAccount",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ReentrancyGuardReentrantCall",
    inputs: [],
  },
  {
    type: "error",
    name: "SafeERC20FailedOperation",
    inputs: [
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
    ],
  },
] as const;

const _bytecode =
  "0x608060405234801562000010575f80fd5b506040516200289b3803806200289b8339810160408190526200003391620000c8565b806001600160a01b0381166200006257604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b6200006d8162000079565b505060018055620000f7565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f60208284031215620000d9575f80fd5b81516001600160a01b0381168114620000f0575f80fd5b9392505050565b61279680620001055f395ff3fe608060405234801561000f575f80fd5b50600436106101bb575f3560e01c80638da5cb5b116100f3578063c80b7c1711610093578063e77d1a1f1161006e578063e77d1a1f146103be578063e985e367146103c7578063f2fde38b146103da578063fa1a5f59146103ed575f80fd5b8063c80b7c1714610351578063c884ef8314610364578063df7dbd7914610396575f80fd5b8063ac307773116100ce578063ac30777314610313578063c19d93fb1461031b578063c1cbbca714610335578063c59ee1dc14610348575f80fd5b80638da5cb5b146102e75780639972cffe146102f75780639b13e8e91461030a575f80fd5b806348c54b9d1161015e5780634da60aa5116101395780634da60aa5146102a6578063715018a6146102b9578063791b98bc146102c1578063811e539c146102d4575f80fd5b806348c54b9d146102775780634bae6f3f1461027f5780634bb278f31461029e575f80fd5b80631514617e116101995780631514617e1461020d578063370158ea1461021657806342e94c901461022d57806344c63eec1461024c575f80fd5b8063089fe6aa146101bf57806310309781146101ec578063146901db14610203575b5f80fd5b6013546101d390610100900462ffffff1681565b60405162ffffff90911681526020015b60405180910390f35b6101f5600a5481565b6040519081526020016101e3565b61020b6103f6565b005b6101f560065481565b61021e6105a0565b6040516101e393929190612110565b6101f561023b36600461216c565b60106020525f908152604090205481565b600e5461025f906001600160a01b031681565b6040516001600160a01b0390911681526020016101e3565b61020b610748565b6101f561028d36600461216c565b60116020525f908152604090205481565b61020b61091f565b600c5461025f906001600160a01b031681565b61020b610b27565b600f5461025f906001600160a01b031681565b600d5461025f906001600160a01b031681565b5f546001600160a01b031661025f565b61020b610305366004612198565b610b38565b6101f560095481565b61020b610f83565b6013546103289060ff1681565b6040516101e391906121dd565b61020b610343366004612203565b6110a5565b6101f560075481565b61020b61035f3660046122f3565b611312565b61038661037236600461216c565b60126020525f908152604090205460ff1681565b60405190151581526020016101e3565b6103a96103a4366004612203565b6118ce565b604080519283526020830191909152016101e3565b6101f560055481565b600b5461025f906001600160a01b031681565b61020b6103e836600461216c565b6119cc565b6101f560085481565b6103fe611a06565b610406611a32565b5f60135460ff16600381111561041e5761041e6121c9565b146104695760405162461bcd60e51b815260206004820152601660248201527546756e6472616973696e67206e6f742061637469766560501b60448201526064015b60405180910390fd5b600d5f9054906101000a90046001600160a01b03166001600160a01b031663a8d31c786040518163ffffffff1660e01b81526004015f604051808303815f87803b1580156104b5575f80fd5b505af11580156104c7573d5f803e3d5ffd5b50506013805460ff191660021790555050600b546040516370a0823160e01b81523060048201525f916001600160a01b0316906370a0823190602401602060405180830381865afa15801561051e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105429190612427565b6040519091507f625a40e68d9554793bf647bf32e4885e7f15bd1bfac262906cc7d26f376f20a2905f90a16105946105815f546001600160a01b031690565b600b546001600160a01b03169083611a5c565b5061059e60018055565b565b6002805481906105af9061243e565b80601f01602080910402602001604051908101604052809291908181526020018280546105db9061243e565b80156106265780601f106105fd57610100808354040283529160200191610626565b820191905f5260205f20905b81548152906001019060200180831161060957829003601f168201915b50505050509080600101805461063b9061243e565b80601f01602080910402602001604051908101604052809291908181526020018280546106679061243e565b80156106b25780601f10610689576101008083540402835291602001916106b2565b820191905f5260205f20905b81548152906001019060200180831161069557829003601f168201915b5050505050908060020180546106c79061243e565b80601f01602080910402602001604051908101604052809291908181526020018280546106f39061243e565b801561073e5780601f106107155761010080835404028352916020019161073e565b820191905f5260205f20905b81548152906001019060200180831161072157829003601f168201915b5050505050905083565b610750611a32565b600360135460ff166003811115610769576107696121c9565b146107ae5760405162461bcd60e51b815260206004820152601560248201527414ddd85c081c185a5c881b9bdd0818dc99585d1959605a1b6044820152606401610460565b335f9081526012602052604090205460ff16156108065760405162461bcd60e51b8152602060048201526016602482015275151bdad95b9cc8185b1c9958591e4818db185a5b595960521b6044820152606401610460565b335f908152601260209081526040808320805460ff191660011790556011909152902054600654156108c957600e546005546009546001600160a01b03909216916324ef8c1b913391610859919061248a565b6006546040516001600160e01b031960e086901b1681526001600160a01b03909316600484015260248301919091526044820152606481018490526084015f604051808303815f87803b1580156108ae575f80fd5b505af11580156108c0573d5f803e3d5ffd5b505050506108e0565b600b546108e0906001600160a01b03163383611a5c565b60405181815233907fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a9060200160405180910390a25061059e60018055565b610927611a06565b61092f611a32565b5f60135460ff166003811115610947576109476121c9565b1461098d5760405162461bcd60e51b815260206004820152601660248201527546756e6472616973696e67206e6f742061637469766560501b6044820152606401610460565b6013805460ff19166001179055600d546040805163d54dff2d60e01b815290516001600160a01b039092169163d54dff2d916004808201925f9290919082900301818387803b1580156109de575f80fd5b505af11580156109f0573d5f803e3d5ffd5b50505050610a1e610a085f546001600160a01b031690565b600754600c546001600160a01b03169190611a5c565b600b546040516370a0823160e01b81523060048201525f916001600160a01b0316906370a0823190602401602060405180830381865afa158015610a64573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a889190612427565b9050600854811115610ac857610ac8610aa85f546001600160a01b031690565b600854610ab5908461249d565b600b546001600160a01b03169190611a5c565b60065415610af157600e54600854600b54610af1926001600160a01b0391821692911690611a5c565b426009556040517f6823b073d48d6e3a7d385eeb601452d680e74bb46afe3255a7d778f3a9b17681905f90a15061059e60018055565b610b2f611a06565b61059e5f611ac0565b610b40611a06565b610b48611a32565b600160135460ff166003811115610b6157610b616121c9565b14610bae5760405162461bcd60e51b815260206004820152601960248201527f46756e6472616973696e67206e6f742066696e616c697a6564000000000000006044820152606401610460565b6013805460ff19166003179055600b546040516370a0823160e01b81523060048201525f916001600160a01b0316906370a0823190602401602060405180830381865afa158015610c01573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c259190612427565b600c546040516370a0823160e01b81523060048201529192505f916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610c70573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c949190612427565b60065490915082905f03610d1a576008548311610d0a5760405162461bcd60e51b815260206004820152602e60248201527f4e6f7420656e6f7567682073616c6520746f6b656e7320746f2063726561746560448201526d103a34329039bbb0b8103830b4b960911b6064820152608401610460565b600854610d17908461249d565b90505b5f80610d25846118ce565b9150915082821115610d8e5760405162461bcd60e51b815260206004820152602c60248201527f4e6f7420656e6f756768206c697175696469747920746f20637265617465207460448201526b34329039bbb0b8103830b4b960a11b6064820152608401610460565b600b54600c545f91829182918291610db4916001600160a01b0390811691168888611b0f565b600f5493975091955093509150610dd8906001600160a01b03808716911684611bb5565b600f54610df2906001600160a01b03858116911683611bb5565b60408051610160810182526001600160a01b038087168252858116602083015260135462ffffff61010091829004168385015260028f810b60608501528e900b608084015260a0830186905260c083018590525f60e084018190529083018190523361012084015242610140840152600f549351634418b22b60e11b815292939092839283928392911690638831645690610e919088906004016124b0565b6080604051808303815f875af1158015610ead573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ed19190612574565b935093509350935086821015610f0057610f0033610eef848a61249d565b6001600160a01b038c169190611a5c565b85811015610f2757610f2733610f16838961249d565b6001600160a01b038b169190611a5c565b604080518581526001600160801b03851660208201527fc1a1ee9d31c39113d1073fa8118a8a09cd2e5777ef352c4bede40d05f9376236910160405180910390a15050505050505050505050505050610f7f60018055565b5050565b600260135460ff166003811115610f9c57610f9c6121c9565b14610fdc5760405162461bcd60e51b815260206004820152601060248201526f14985a5cd9481b9bdd0819985a5b195960821b6044820152606401610460565b335f9081526012602052604090205460ff16156110335760405162461bcd60e51b8152602060048201526015602482015274119d5b991cc8185b1c9958591e4818db185a5b5959605a1b6044820152606401610460565b335f818152601260209081526040808320805460ff1916600117905560108252918290205491518281529192917fa65a8b4f7f65a1063243d7f7e9e4da00ff767599acf21549ef2548a45d1695ae910160405180910390a2600c546110a2906001600160a01b03163383611a5c565b50565b6110ad611a32565b5f60135460ff1660038111156110c5576110c56121c9565b146111125760405162461bcd60e51b815260206004820152601960248201527f46756e6472616973696e67206973206e6f7420616374697665000000000000006044820152606401610460565b600d5460405163060b0b0f60e41b8152600481018390523360248201525f916001600160a01b0316906360b0b0f0906044016020604051808303815f875af1158015611160573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111849190612427565b335f908152601060205260408120805492935084929091906111a790849061248a565b9091555050335f90815260116020526040812080548392906111ca90849061248a565b925050819055508160075f8282546111e2919061248a565b925050819055508060085f8282546111fa919061248a565b9091555050600c54604051636eb1769f60e11b81523360048201523060248201525f916001600160a01b03169063dd62ed3e90604401602060405180830381865afa15801561124b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061126f9190612427565b9050828110156112ba5760405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e7420616c6c6f77616e636560501b6044820152606401610460565b600c546112d2906001600160a01b0316333086611c42565b60405183815233907f4d154d4aae216bed6d0926db77c00df2b57c6b5ba4eee05775de20facede3a7b9060200160405180910390a250506110a260018055565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff165f811580156113575750825b90505f8267ffffffffffffffff1660011480156113735750303b155b905081158015611381575080155b1561139f5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156113c957845460ff60401b1916600160401b1785555b85516001600160a01b031661142a5760405162461bcd60e51b815260206004820152602160248201527f53616c6520746f6b656e20616464726573732063616e6e6f74206265207a65726044820152606f60f81b6064820152608401610460565b60208601516001600160a01b031661148f5760405162461bcd60e51b815260206004820152602260248201527f526169736520746f6b656e20616464726573732063616e6e6f74206265207a65604482015261726f60f01b6064820152608401610460565b6101008601516001600160a01b03166114fa5760405162461bcd60e51b815260206004820152602760248201527f506f736974696f6e206d616e6167657220616464726573732063616e6e6f74206044820152666265207a65726f60c81b6064820152608401610460565b60a08601516001600160a01b03166115545760405162461bcd60e51b815260206004820152601f60248201527f43616d706169676e20616464726573732063616e6e6f74206265207a65726f006044820152606401610460565b60e0860151158061157257506101208601516001600160a01b031615155b6115db5760405162461bcd60e51b815260206004820152603460248201527f56657374696e6720616464726573732063616e6e6f74206265207a65726f206960448201527319881d995cdd1a5b99c81a5cc8195b98589b195960621b6064820152608401610460565b85610140015162ffffff166127101480611600575085610140015162ffffff16610bb8145b80611616575085610140015162ffffff166101f4145b6116555760405162461bcd60e51b815260206004820152601060248201526f496e76616c696420706f6f6c2066656560801b6044820152606401610460565b8551600b80546001600160a01b03199081166001600160a01b0393841617909155602080890151600c805490931693169290921790556040805160608082018352828a0151808352908a0151938201939093526080890151918101919091529060029081906116c49082612605565b50602082015160018201906116d99082612605565b50604082015160028201906116ee9082612605565b50505060a0860151600d80546001600160a01b03199081166001600160a01b039384161790915561010080890151600f8054841691851691909117905560e089015160065560c0890151600555610120890151600e805490931693169290921790556013805461014089015163ffffffff1990911662ffffff90911690920291909117905542600a555f61178a683635c9adc5dea000006118ce565b50600b54600c549192505f918291829182916117bd916001600160a01b03918216911687683635c9adc5dea00000611b0f565b600f5460135494985092965090945092506001600160a01b0316906313ead5629086908690610100900462ffffff166117f68787611c7b565b6040516001600160e01b031960e087901b1681526001600160a01b039485166004820152928416602484015262ffffff90911660448301529190911660648201526084016020604051808303815f875af1158015611856573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061187a91906126c1565b50505050505083156118c657845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b5f805f600d5f9054906101000a90046001600160a01b03166001600160a01b0316637b1b1de66040518163ffffffff1660e01b8152600401602060405180830381865afa158015611921573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906119459190612427565b90505f81116119a85760405162461bcd60e51b815260206004820152602960248201527f50726963652070657220746f6b656e206d7573742062652067726561746572206044820152687468616e207a65726f60b81b6064820152608401610460565b806119bb85670de0b6b3a76400006126dc565b6119c59190612707565b9492505050565b6119d4611a06565b6001600160a01b0381166119fd57604051631e4fbdf760e01b81525f6004820152602401610460565b6110a281611ac0565b5f546001600160a01b0316331461059e5760405163118cdaa760e01b8152336004820152602401610460565b600260015403611a5557604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b6040516001600160a01b03838116602483015260448201839052611abb91859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050611ca6565b505050565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f805f80866001600160a01b0316886001600160a01b031603611b745760405162461bcd60e51b815260206004820152601860248201527f546f6b656e73206d75737420626520646966666572656e7400000000000000006044820152606401610460565b866001600160a01b0316886001600160a01b03161015611b9e575086925085915084905083611baa565b50859250869150839050845b945094509450949050565b604051636eb1769f60e11b81523060048201526001600160a01b0383811660248301525f919085169063dd62ed3e90604401602060405180830381865afa158015611c02573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611c269190612427565b9050611c3c8484611c37858561248a565b611d07565b50505050565b6040516001600160a01b038481166024830152838116604483015260648201839052611c3c9186918216906323b872dd90608401611a89565b5f80611c8b84606085901b612707565b90505f6030611c9983611d96565b901b925050505b92915050565b5f611cba6001600160a01b03841683611ee9565b905080515f14158015611cde575080806020019051810190611cdc9190612726565b155b15611abb57604051635274afe760e01b81526001600160a01b0384166004820152602401610460565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b179052611d588482611efd565b611c3c576040516001600160a01b0384811660248301525f6044830152611d8c91869182169063095ea7b390606401611a89565b611c3c8482611ca6565b5f60018211611da3575090565b816001600160801b8210611dbc5760809190911c9060401b5b600160401b8210611dd25760409190911c9060201b5b6401000000008210611de95760209190911c9060101b5b620100008210611dfe5760109190911c9060081b5b6101008210611e125760089190911c9060041b5b60108210611e255760049190911c9060021b5b60048210611e315760011b5b600302600190811c90818581611e4957611e496126f3565b048201901c90506001818581611e6157611e616126f3565b048201901c90506001818581611e7957611e796126f3565b048201901c90506001818581611e9157611e916126f3565b048201901c90506001818581611ea957611ea96126f3565b048201901c90506001818581611ec157611ec16126f3565b048201901c9050611ee0818581611eda57611eda6126f3565b04821190565b90039392505050565b6060611ef683835f611f9e565b9392505050565b5f805f846001600160a01b031684604051611f189190612745565b5f604051808303815f865af19150503d805f8114611f51576040519150601f19603f3d011682016040523d82523d5f602084013e611f56565b606091505b5091509150818015611f80575080511580611f80575080806020019051810190611f809190612726565b8015611f9557505f856001600160a01b03163b115b95945050505050565b606081471015611fca5760405163cf47918160e01b815247600482015260248101839052604401610460565b5f80856001600160a01b03168486604051611fe59190612745565b5f6040518083038185875af1925050503d805f811461201f576040519150601f19603f3d011682016040523d82523d5f602084013e612024565b606091505b509150915061203486838361203e565b9695505050505050565b6060826120535761204e8261209a565b611ef6565b815115801561206a57506001600160a01b0384163b155b1561209357604051639996b31560e01b81526001600160a01b0385166004820152602401610460565b5080611ef6565b8051156120aa5780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b5f5b838110156120dd5781810151838201526020016120c5565b50505f910152565b5f81518084526120fc8160208601602086016120c3565b601f01601f19169290920160200192915050565b606081525f61212260608301866120e5565b828103602084015261213481866120e5565b9050828103604084015261203481856120e5565b6001600160a01b03811681146110a2575f80fd5b803561216781612148565b919050565b5f6020828403121561217c575f80fd5b8135611ef681612148565b8035600281900b8114612167575f80fd5b5f80604083850312156121a9575f80fd5b6121b283612187565b91506121c060208401612187565b90509250929050565b634e487b7160e01b5f52602160045260245ffd5b60208101600483106121fd57634e487b7160e01b5f52602160045260245ffd5b91905290565b5f60208284031215612213575f80fd5b5035919050565b634e487b7160e01b5f52604160045260245ffd5b604051610160810167ffffffffffffffff811182821017156122525761225261221a565b60405290565b5f82601f830112612267575f80fd5b813567ffffffffffffffff808211156122825761228261221a565b604051601f8301601f19908116603f011681019082821181831017156122aa576122aa61221a565b816040528381528660208588010111156122c2575f80fd5b836020870160208301375f602085830101528094505050505092915050565b803562ffffff81168114612167575f80fd5b5f60208284031215612303575f80fd5b813567ffffffffffffffff8082111561231a575f80fd5b90830190610160828603121561232e575f80fd5b61233661222e565b61233f8361215c565b815261234d6020840161215c565b6020820152604083013582811115612363575f80fd5b61236f87828601612258565b604083015250606083013582811115612386575f80fd5b61239287828601612258565b6060830152506080830135828111156123a9575f80fd5b6123b587828601612258565b6080830152506123c760a0840161215c565b60a082015260c083013560c082015260e083013560e082015261010091506123f082840161215c565b82820152610120915061240482840161215c565b8282015261014091506124188284016122e1565b91810191909152949350505050565b5f60208284031215612437575f80fd5b5051919050565b600181811c9082168061245257607f821691505b60208210810361247057634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b80820180821115611ca057611ca0612476565b81810381811115611ca057611ca0612476565b81516001600160a01b03168152610160810160208301516124dc60208401826001600160a01b03169052565b5060408301516124f3604084018262ffffff169052565b506060830151612508606084018260020b9052565b50608083015161251d608084018260020b9052565b5060a083015160a083015260c083015160c083015260e083015160e083015261010080840151818401525061012080840151612563828501826001600160a01b03169052565b505061014092830151919092015290565b5f805f8060808587031215612587575f80fd5b8451935060208501516001600160801b03811681146125a4575f80fd5b6040860151606090960151949790965092505050565b601f821115611abb57805f5260205f20601f840160051c810160208510156125df5750805b601f840160051c820191505b818110156125fe575f81556001016125eb565b5050505050565b815167ffffffffffffffff81111561261f5761261f61221a565b6126338161262d845461243e565b846125ba565b602080601f831160018114612666575f841561264f5750858301515b5f19600386901b1c1916600185901b1785556118c6565b5f85815260208120601f198616915b8281101561269457888601518255948401946001909101908401612675565b50858210156126b157878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b5f602082840312156126d1575f80fd5b8151611ef681612148565b8082028115828204841417611ca057611ca0612476565b634e487b7160e01b5f52601260045260245ffd5b5f8261272157634e487b7160e01b5f52601260045260245ffd5b500490565b5f60208284031215612736575f80fd5b81518015158114611ef6575f80fd5b5f82516127568184602087016120c3565b919091019291505056fea264697066735822122015c6ccb38f46c6ddc72f152645e93f1c8b7e3bc1c06cdad7678c4eaf10cdfd4d64736f6c63430008180033";

type FundraiserConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FundraiserConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Fundraiser__factory extends ContractFactory {
  constructor(...args: FundraiserConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    owner_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(owner_, overrides || {});
  }
  override deploy(
    owner_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(owner_, overrides || {}) as Promise<
      Fundraiser & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Fundraiser__factory {
    return super.connect(runner) as Fundraiser__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FundraiserInterface {
    return new Interface(_abi) as FundraiserInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Fundraiser {
    return new Contract(address, _abi, runner) as unknown as Fundraiser;
  }
}
